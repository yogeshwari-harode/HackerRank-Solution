//Operator Overloading
#include<iostream>
using namespace std;

class Complex
{
public:
    int a,b;
    void input(string s)
    {
        int v1=0;
        int i=0;
        while(s[i]!='+')
        {
            v1=v1*10+s[i]-'0';
            i++;
        }
        while(s[i]==' ' || s[i]=='+'||s[i]=='i')
        {
            i++;
        }
        int v2=0;
        while(i<s.length())
        {
            v2=v2*10+s[i]-'0';
            i++;
        }
        a=v1;
        b=v2;
    }
};


Complex operator +(Complex X,Complex Y)
{
        Complex temp;
        temp.a=X.a+Y.a;
        temp.b=X.b+Y.b;
        return (temp);
 
}
ostream& operator<<(ostream& dout,Complex C) 
{
    cout<< C.a<< "+i" << C.b;
    return dout;
}


int main()
{
    Complex x,y;
    string s1,s2;
    cin>>s1;
    cin>>s2;
    x.input(s1);
    y.input(s2);
    Complex z=x+y;
    cout<<z<<endl;
}
